openapi: 3.0.0
info:
  title: Home Budget Tracker API
  version: 1.0.0
  description: API documentation for Home Budget Tracker

paths:
  /api/v1/transaction:
    get:
      summary: Get all transactions by user and account
      description: Get all transactions by user and account with pagination, optionally filtered by currency code
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
        - name: code
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '401':
          description: Unauthorized

    post:
      summary: Create a new transaction
      description: Create a new transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                date:
                  type: string
                  format: date
                category:
                  type: string
                currency:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string
                  validationErrors:
                    type: array
                    items:
                      type: string
        '401':
          description: Unauthorized

  /api/v1/transaction/{id}:
    delete:
      summary: Delete a transaction
      description: Delete a transaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string

  /api/v1/transaction/category:
    get:
      summary: Get all transactions by user, account, and category
      description: Get all transactions by user, account, and category with pagination, optionally filtered by currency code
      parameters:
        - name: category
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
        - name: code
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string

  /api/v1/transaction/date:
    get:
      summary: Get all transactions by user, account, and date between
      description: Get all transactions by user, account, and date between with pagination, optionally filtered by currency code
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
        - name: code
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string

  /api/v1/transaction/category-date:
    get:
      summary: Get all transactions by user, account, category, and date between
      description: Get all transactions by user, account, category, and date between with pagination, optionally filtered by currency code
      parameters:
        - name: category
          in: query
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
        - name: code
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string

  /api/v1/transaction/sum-positive:
    get:
      summary: Sum positive amounts
      description: Sum positive amounts filtered by currency code
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string
        '401':
          description: Unauthorized

  /api/v1/transaction/sum-negative:
    get:
      summary: Sum negative amounts
      description: Sum negative amounts filtered by currency code
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string
        '401':
          description: Unauthorized

  /api/v1/transaction/sum:
    get:
      summary: Sum amounts
      description: Sum amounts filtered by currency code
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string
        '401':
          description: Unauthorized

  /api/v1/transaction/export:
    get:
      summary: Export transactions to CSV
      description: Export transactions to CSV
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          description: Unauthorized

  /api/v1/category:
    get:
      summary: Get all categories by current user
      description: Get all categories by current user with pagination
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '401':
          description: Unauthorized

    post:
      summary: Create a new category for current user
      description: Create a new category for current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string
                  validationErrors:
                    type: array
                    items:
                      type: string
        '401':
          description: Unauthorized

  /api/v1/category/without-pagination:
    get:
      summary: Get all categories by current user without pagination
      description: Get all categories by current user without pagination
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '401':
          description: Unauthorized

  /api/v1/category/{id}:
    delete:
      summary: Delete a category by current user
      description: Delete a category by current user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string

  /api/v1/account:
    get:
      summary: Get all accounts by current user
      description: Get all accounts by current user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized

    post:
      summary: Create a new account for current user
      description: Create a new account for current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                currency:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string
                  validationErrors:
                    type: array
                    items:
                      type: string
        '401':
          description: Unauthorized

    patch:
      summary: Update account name by current user
      description: Update account name by current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                currency:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string

  /api/v1/account/{code}:
    get:
      summary: Get account by current user and currency code
      description: Get account by current user and currency code
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessErrorCode:
                    type: string
                  businessErrorDescription:
                    type: string

components:
  schemas:
    Page:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        totalPages:
          type: integer
        totalElements:
          type: integer
        size:
          type: integer
        number:
          type: integer
        first:
          type: boolean
        last:
          type: boolean

    Transaction:
      type: object
      properties:
        id:
          type: integer
        amount:
          type: number
        date:
          type: string
          format: date
        category:
          type: string
        currency:
          type: string

    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    Account:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        currency:
          type: string