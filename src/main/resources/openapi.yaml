openapi: 3.0.0
info:
  title: Home Budget Tracker API
  version: 1.0.0
  description: API documentation for Home Budget Tracker

paths:
  /api/v1/account:
    get:
      summary: Get all accounts by current user
      description: Get all accounts by current user
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized

    post:
      summary: Create a new account for current user
      description: Create a new account for current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized

    patch:
      summary: Update account name by current user
      description: Update account name by current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
        '404':
          description: Not found

  /api/v1/account/{code}:
    get:
      summary: Get account by current user and currency code
      description: Get account by current user and currency code
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
        '404':
          description: Not found

  /api/v1/category:
    get:
      summary: Get all categories by current user
      description: Get all categories by current user with pagination
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized

    post:
      summary: Create a new category for current user
      description: Create a new category for current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /api/v1/category/without-pagination:
    get:
      summary: Get all categories by current user without pagination
      description: Get all categories by current user without pagination
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized

  /api/v1/category/{id}:
    delete:
      summary: Delete a category by current user
      description: Delete a category by current user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No content
        '401':
          description: Unauthorized
        '404':
          description: Not found

  /api/v1/transaction:
    get:
      summary: Get all transactions by user and account
      description: Get all transactions by user and account with pagination, optionally filtered by currency code
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized

    post:
      summary: Create a new transaction
      description: Create a new transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /api/v1/transaction/{id}:
    delete:
      summary: Delete a transaction
      description: Delete a transaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No content
        '401':
          description: Unauthorized
        '404':
          description: Not found

  /api/v1/transaction/by-category:
    get:
      summary: Get all transactions by user, account, and category
      description: Get all transactions by user, account, and category with pagination, optionally filtered by currency code
      parameters:
        - name: category
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
        '404':
          description: Not found

  /api/v1/transaction/by-date:
    get:
      summary: Get all transactions by user, account, and date between
      description: Get all transactions by user, account, and date between with pagination, optionally filtered by currency code
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
        '404':
          description: Not found

  /api/v1/transaction/by-category-and-date:
    get:
      summary: Get all transactions by user, account, category, and date between
      description: Get all transactions by user, account, category, and date between with pagination, optionally filtered by currency code
      parameters:
        - name: category
          in: query
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
        '404':
          description: Not found

  /api/v1/transaction/sum-positive:
    get:
      summary: Sum positive amounts
      description: Sum positive amounts filtered by currency code
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /api/v1/transaction/sum-negative:
    get:
      summary: Sum negative amounts
      description: Sum negative amounts filtered by currency code
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /api/v1/transaction/sum:
    get:
      summary: Sum amounts
      description: Sum amounts filtered by currency code
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /api/v1/transaction/export-csv:
    get:
      summary: Export transactions to CSV
      description: Export transactions to CSV
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized

  /api/v1/auth/register:
    post:
      summary: Register a new user
      description: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad request

  /api/v1/auth/authenticate:
    post:
      summary: Authenticate a user
      description: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized

  /api/v1/auth/activate-account:
    get:
      summary: Activate a user account
      description: Activate a user account
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad request

  /api/v1/auth/password-reset-link:
    get:
      summary: Request a password reset link
      description: Request a password reset link
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetLinkRequest'
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad request

  /api/v1/auth/password-reset:
    post:
      summary: Reset a user password
      description: Reset a user password
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad request

  /api/v1/auth/change-password:
    put:
      summary: Change a user password
      description: Change a user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad request

components:
  schemas:
    AccountRequest:
      type: object
      properties:
        name:
          type: string
        currency:
          type: string

    CategoryRequest:
      type: object
      properties:
        name:
          type: string

    TransactionRequest:
      type: object
      properties:
        amount:
          type: number
        date:
          type: string
          format: date
        category:
          type: string
        currency:
          type: string

    RegisterRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    PasswordResetLinkRequest:
      type: object
      properties:
        email:
          type: string

    ChangePasswordRequest:
      type: object
      properties:
        password:
          type: string