application:
  security:
    frontend-url: http://localhost:5173
  exchange:
    rate:
      url: ${EXCHANGE_RATE_URL}
      api-key: ${EXCHANGE_RATE_API_KEY}

aws:
  profile: ${AWS_PROFILE_DEV}
  s3:
    region: ${AWS_S3_REGION_DEV}
    bucket: ${AWS_S3_BUCKET_DEV}
    expiration-time: ${AWS_S3_PRESIGNED_URL_EXPIRATION_TIME_DEV}
  cloudfront:
    url: ${AWS_CLOUDFRONT_URL_DEV}
    public-key-pair-id: ${AWS_CLOUDFRONT_PUBLIC_KEY_PAIR_ID_DEV}
    private-key: ${AWS_CLOUDFRONT_PRIVATE_KEY_DEV}
  transaction-response-url-type: cloudfront-signed
  cognito:
    jwks-url: ${AWS_COGNITO_PUBLIC_KEY_DEV}

server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST_DEV}:${DB_PORT_DEV}/${DB_NAME_DEV}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME_DEV}
    password: ${DB_PASSWORD_DEV}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    open-in-view: false
  config:
    activate:
      on-profile: dev
    import: optional:file:.env[.properties]